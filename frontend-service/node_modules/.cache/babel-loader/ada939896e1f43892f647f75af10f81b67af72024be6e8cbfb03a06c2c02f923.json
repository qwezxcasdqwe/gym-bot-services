{"ast":null,"code":"var _jsxFileName = \"/app/src/index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\n\n// Интерфейс для продукта\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // Типизируем состояние как массив продуктов\n  const [products, setProducts] = useState([]);\n\n  // Получаем данные о продуктах с бэкенда с использованием fetch\n  useEffect(() => {\n    fetch('http://backend:8081/products') // Примерный адрес API\n    .then(response => response.json()) // Преобразуем ответ в JSON\n    .then(data => {\n      setProducts(data); // Устанавливаем полученные данные в state\n    }).catch(error => {\n      console.error('Error fetching products:', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sports Nutrition Products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: products.map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [product.name, \" - \", product.category, \" - $\", product.price]\n      }, product.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","products","setProducts","fetch","then","response","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","product","name","category","price","id","_c","$RefreshReg$"],"sources":["/app/src/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\n// Интерфейс для продукта\r\ninterface Product {\r\n  id: number;\r\n  name: string;\r\n  category: string;\r\n  price: number;\r\n}\r\n\r\nconst App = () => {\r\n  // Типизируем состояние как массив продуктов\r\n  const [products, setProducts] = useState<Product[]>([]);\r\n\r\n  // Получаем данные о продуктах с бэкенда с использованием fetch\r\n  useEffect(() => {\r\n    fetch('http://backend:8081/products')  // Примерный адрес API\r\n      .then((response) => response.json())  // Преобразуем ответ в JSON\r\n      .then((data: Product[]) => {\r\n        setProducts(data);  // Устанавливаем полученные данные в state\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching products:', error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Sports Nutrition Products</h1>\r\n      <ul>\r\n        {products.map((product) => (\r\n          <li key={product.id}>\r\n            {product.name} - {product.category} - ${product.price}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;;AAElD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAQA,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAY,EAAE,CAAC;;EAEvD;EACAD,SAAS,CAAC,MAAM;IACdQ,KAAK,CAAC,8BAA8B,CAAC,CAAE;IAAA,CACpCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAAE;IAAA,CACrCF,IAAI,CAAEG,IAAe,IAAK;MACzBL,WAAW,CAACK,IAAI,CAAC,CAAC,CAAE;IACtB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClCjB,OAAA;MAAAa,QAAA,EACGV,QAAQ,CAACe,GAAG,CAAEC,OAAO,iBACpBnB,OAAA;QAAAa,QAAA,GACGM,OAAO,CAACC,IAAI,EAAC,KAAG,EAACD,OAAO,CAACE,QAAQ,EAAC,MAAI,EAACF,OAAO,CAACG,KAAK;MAAA,GAD9CH,OAAO,CAACI,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEf,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAAf,EAAA,CA5BKD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AA8BT,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}